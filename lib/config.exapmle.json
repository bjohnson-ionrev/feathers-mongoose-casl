{
  // Add this to your config file,
  "authentication": {
    "secret": Run in the command line feathers generate secret and past here the new key,
    "strategies": ["jwt", "local"],
    "path": "/authentication",
    "service": "users",
    "jwt": {
      "header": {
        "typ": "access"
      },
      "audience": "https://yourdomain.com",
      "subject": "anonymous",
      "issuer": "feathers",
      "algorithm": "HS256",
      "expiresIn": "1d"
    },
    "local": {
      "entity": "user",
      "usernameField": "email",
      "passwordField": "password"
    },
    "auth0": {
      "clientID": "your auth0 client id",
      "clientSecret": "your auth0 client secret",
      "successRedirect": "/",
      "domain": "mydomain.auth0.com",
      "scopes": ["profile"]
    },
    "google": {
      "clientID": "your google client id",
      "clientSecret": "your google client secret",
      "successRedirect": "/",
      "scope": ["profile openid email"]
    },
    "facebook": {
      "clientID": "your facebook client id",
      "clientSecret": "your facebook client secret",
      "successRedirect": "/",
      "scope": ["public_profile", "email"],
      "profileFields": [
        "id",
        "displayName",
        "first_name",
        "last_name",
        "email",
        "gender",
        "profileUrl",
        "birthday",
        "picture",
        "permissions"
      ]
    },
    "github": {
      "clientID": "your github client id",
      "clientSecret": "your github client secret",
      "successRedirect": "/"
    },
    "cookie": {
      "enabled": true,
      "name": "feathers-jwt",
      "httpOnly": false,
      "secure": false
    }
  },
  "serverUrl": "http://localhost:3030",
  "mongodb": "mongodb+srv.....",
  "s3": {
    "bucket": "bucket....",
    "accessKeyId": "accessKeyId....",
    "secretAccessKey": "secretAccessKey....",
    "signedUrlExpires" : 900
  },
  "google-cloud": {
    "projectId": "agora-real",
    "bucket": "MyCompany-dev",
    "keyFilename": "../src/secret-files/google-key.json",
    "signedUrlExpires" : 900
  },
  "mailgun": {
    "apiKey": "apiKey",
    "domain": "mg.MyCompany.com"
  },
  "sendgrid": {
    "apiKey": "apiKey"
  },
  "twilio": {
    "sid": "XXXXXXXX",
    "token": "XXXXXXXX",
    "number": "XXXXXXXX"
  },
  "feathers-mongoose-casl": {
    "pickMeReadFields": ["-roles","-verifyExpires","-resetExpires","-verifyToken","-isVerified","-resetToken","-verifyChanges","-password"],
    "pickMeUpdateFields": ["firstName","lastName"],
    "mailer": {
      "service": "mailgun",
      "sendgrid-authentication-emails-templates": {
        "reset-password": null,
        "Identity-change": null,
        "password-change": null,
        "verify-email": null,
        "password-was-reset": null,
        "email-verified": null
      }
    },
    "defaultRules": [
      {
        "userContext": {"email": "doron.nahum+2@gmail.com"},
        "actions": ["manage"],
        "subject": ["dashboard","users","user-abilities","rules","files"]
      },
      {
        "name": "allow-admin-dashboard",
        "description": "allowed admin users access dashboard, and manage rules and users",
        "actions": ["manage"],
        "subject": ["dashboard","users","get-file"],
        "roles": ["admin"]
      },
      {
        "name": "allow-sys-admin-rules",
        "description": "allowed admin users access dashboard, and manage rules and users",
        "actions": ["manage"],
        "subject": ["rules","user-abilities"],
        "roles": ["sys-admin"]
      }
    ],
    "uploads": {
      "services": {
        "s3": 0,
        "local-private": 1,
        "local-public": 1,
        "google-cloud": 0
      },
      "defaultFileService": "local-private",
      "blockDeleteDocumentWhenDeleteFileFailed": false,
      "blockUpdateDocumentWhenReplaceFileFailed": false
    },
    "verifyEmail": {
      "enabled": true,
      "fromEmail": "info@MyCompany.com",
      "helpEmail": "help@MyCompany.com"
    },
    "clientUrl" : "http://localhost:8080",
    "changePasswordClientUrl": null,
    "clientSigninUrl" : "http://localhost:8080/signin",
    "srcFolder": "../src/",
    "privateFolder": "../private-files",
    "rulesCache": {
      "enabled": true,
      "local-catch": true,
      "local-config": {
        "max": 400,
        "maxAge": 3600000
      }
    },
    "privateFilesAbilityCache": {
    "enabled": true,
    "local-catch": true,
    "local-config": {
      "max": 100,
      "maxAge": 3600000
    }
    }
  }
}